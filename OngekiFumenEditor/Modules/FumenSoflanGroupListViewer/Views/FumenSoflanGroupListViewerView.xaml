<UserControl
    x:Class="OngekiFumenEditor.Modules.FumenSoflanGroupListViewer.Views.FumenSoflanGroupListViewerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cal="http://caliburnmicro.com"
    xmlns:converters="clr-namespace:OngekiFumenEditor.Modules.FumenVisualEditor.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:jas="clr-namespace:WPF.JoshSmith.ServiceProviders.UI"
    xmlns:local="clr-namespace:OngekiFumenEditor.Modules.FumenSoflanGroupListViewer.Views"
    xmlns:markup="clr-namespace:OngekiFumenEditor.UI.Markup"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:valueconverters="clr-namespace:OngekiFumenEditor.Modules.FumenSoflanGroupListViewer.ValueConverters"
    d:DesignHeight="300"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="ItemContStyle" TargetType="ListViewItem">
            <Setter Property="Foreground" Value="{StaticResource EnvironmentToolWindowText}" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Style.Resources>
                <LinearGradientBrush x:Key="MouseOverBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                    <GradientStop Offset="0" Color="#22000000" />
                    <GradientStop Offset="0.4" Color="#44000000" />
                    <GradientStop Offset="0.6" Color="#55000000" />
                    <GradientStop Offset="0.9" Color="#33000000" />
                    <GradientStop Offset="1" Color="#22000000" />
                </LinearGradientBrush>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="jas:ListViewItemDragState.IsBeingDragged" Value="True">
                    <Setter Property="FontWeight" Value="DemiBold" />
                </Trigger>
                <Trigger Property="jas:ListViewItemDragState.IsUnderDragCursor" Value="True">
                    <Setter Property="Background" Value="{StaticResource MouseOverBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <valueconverters:LevelToIndentConverter x:Key="LevelToIndentConverter" />
        <SolidColorBrush x:Key="BlackBrush" Color="Black" />
        <SolidColorBrush x:Key="GrayBrush1" Color="Gray" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal">
            <ToolBar>
                <TextBox
                    Width="100"
                    Margin="10,0,10,0"
                    Text="{Binding CreateNewGroupName}" />
                <Button cal:Message.Attach="[Event Click] = [Action CreateNewGroup()]" Content="{markup:Translate [NewItemGroup]}" />
            </ToolBar>
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <ListView
                cal:Message.Attach="[Event Loaded] = [Action OnListLoaded($source)];"
                Background="Transparent"
                ItemContainerStyle="{StaticResource ItemContStyle}"
                ItemsSource="{Binding DisplaySoflanGroupItemGroupRoot.DisplayableItemSource}"
                SelectionMode="Single">
                <ListView.View>
                    <GridView>
                        <GridView.ColumnHeaderContainerStyle>
                            <Style TargetType="GridViewColumnHeader">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Foreground" Value="{StaticResource EnvironmentToolWindowText}" />
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>
                        <GridViewColumn Width="220" Header="Name">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}}" Orientation="Horizontal">
                                        <ToggleButton
                                            x:Name="Expander"
                                            ClickMode="Press"
                                            IsChecked="{Binding Path=IsExpanded, UpdateSourceTrigger=PropertyChanged}">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HasChildren}" Value="False">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HasChildren}" Value="{x:Null}">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="Width" Value="19" />
                                                    <Setter Property="Height" Value="13" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Border
                                                                    Width="19"
                                                                    Height="13"
                                                                    Background="Transparent">
                                                                    <Border
                                                                        Width="9"
                                                                        Height="9"
                                                                        BorderBrush="#FF7898B5"
                                                                        BorderThickness="0"
                                                                        CornerRadius="1"
                                                                        SnapsToDevicePixels="true">
                                                                        <Border.Background>
                                                                            <SolidColorBrush Color="Transparent" />
                                                                            <!--
                                                                                    <LinearGradientBrush StartPoint="0,0"
                                                                                        EndPoint="1,1">
                                                                                        <LinearGradientBrush.GradientStops>
                                                                                            <GradientStop Color="White"
                                                                                    Offset=".2"/>
                                                                                            <GradientStop Color="#FFC0B7A6"
                                                                                    Offset="1"/>
                                                                                        </LinearGradientBrush.GradientStops>
                                                                                    </LinearGradientBrush>
                                                                            -->
                                                                        </Border.Background>
                                                                        <Path
                                                                            x:Name="ExpandPath"
                                                                            Margin="1,2,1,1"
                                                                            Data="M0,0 L0,6 L6,0 z"
                                                                            Fill="Transparent"
                                                                            Stroke="{DynamicResource BlackBrush}">
                                                                            <Path.RenderTransform>
                                                                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                            </Path.RenderTransform>
                                                                        </Path>
                                                                        <!--
                                                                            <Path x:Name="ExpandPath"
                                                                            Margin="1,1,1,1"
                                                                            Fill="Black"
                                                                            Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                                                                        -->
                                                                    </Border>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter TargetName="ExpandPath" Property="RenderTransform">
                                                                            <Setter.Value>
                                                                                <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource GrayBrush1}" />
                                                                        <Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource BlackBrush}" />

                                                                        <!--
                                                                                    <Setter Property="Data"
                                                                            TargetName="ExpandPath"
                                                                            Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                                                                        -->
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>

                                        <RadioButton
                                            Margin="5,0"
                                            cal:Message.Attach="[Event Checked] = [Action OnItemChecked($dataContext)]"
                                            GroupName="ILOVE2857"
                                            IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}">
                                            <RadioButton.Style>
                                                <Style TargetType="{x:Type RadioButton}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsSelected}" Value="{x:Null}">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </RadioButton.Style>
                                        </RadioButton>

                                        <TextBlock Text="{Binding DisplayName}">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HasChildren}" Value="False">
                                                            <Setter Property="FontWeight" Value="Normal" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HasChildren}" Value="True">
                                                            <Setter Property="FontWeight" Value="Bold" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Design">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox
                                        Margin="2,5,2,5"
                                        HorizontalAlignment="Center"
                                        IsChecked="{Binding IsDisplayInDesignMode}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Preview">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox
                                        Margin="2,5,2,5"
                                        HorizontalAlignment="Center"
                                        IsChecked="{Binding IsDisplayInPreviewMode}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <ListView
                Grid.Column="1"
                Background="Transparent"
                ItemsSource="{Binding DisplaySoflanPointList}"
                SelectionMode="Single">
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="cal:Message.Attach" Value="[Event MouseDoubleClick]=[Action OnItemDoubleClick($dataContext)];" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridView.ColumnHeaderContainerStyle>
                            <Style TargetType="GridViewColumnHeader">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Foreground" Value="{StaticResource EnvironmentToolWindowText}" />
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>

                        <GridViewColumn
                            Width="150"
                            DisplayMemberBinding="{Binding Y}"
                            Header="Y" />
                        <GridViewColumn
                            Width="90"
                            DisplayMemberBinding="{Binding TGrid}"
                            Header="TGrid" />
                        <GridViewColumn
                            Width="90"
                            DisplayMemberBinding="{Binding Bpm.BPM}"
                            Header="Bpm" />
                        <GridViewColumn
                            Width="150"
                            DisplayMemberBinding="{Binding Speed}"
                            Header="Speed" />
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
    </Grid>
</UserControl>
